name: Deploy Django App

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.13.0-alpha.2

    - name: Create virtual environment
      run: python -m venv venv

    - name: Activate virtual environment
      run: source venv/bin/activate

    - name: Install dependencies
      run: |
        pip install ï»¿asgiref==3.5.2
        pip install Django==4.1.1
        pip install django-countries==7.3.2
        pip install django-crispy-forms==1.14.0
        pip install django-environ==0.9.0
        pip install django-etc==1.4.0
        pip install django-filter==22.1
        pip install django-hitcount==1.3.5
        pip install django-multiselectfield==0.1.12
        pip install django-taggit==3.0.0
        pip install Pillow==9.2.0
        pip install psycopg2-binary==2.9.4
        pip install python-decouple==3.6
        pip install sqlparse==0.4.3
        pip install typing_extensions==4.3.0
        pip install tzdata==2022.2
        pip install uWSGI
        
    - name: Run tests
      run: |
        python manage.py test core
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | head -c 7)
          docker build -t nahlooobi/xtremestoreapp:${IMAGE_TAG} .
          docker tag nahlooobi/xtremestoreapp:${IMAGE_TAG} nahlooobi/xtremestoreapp:latest

      - name: Push Docker Image
        run: docker push nahlooobi/xtremestoreapp:latest

      - name: Logout from Docker Hub
        run: docker logout

  deploy:
    runs-on: ubuntu-latest

    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Print Repository State
        run: git status

      - name: Deploy Via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP_ADDRESS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/Ecommerce
            docker-compose -f docker-compose.yml down
            git pull origin main
            docker-compose -f docker-compose.yml up --build -d



            
            
