# name: CICD Static Deployment

# on:
#   push:
#     branches:
#       - main
# jobs:
#   deploy:   
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy Via SSH
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.IP_ADDRESS }}
#           username: ${{ secrets.USERNAME }}
#           key: ${{ secrets.PRIVATE_KEY }}
#           script: |
#             cd /home/ubuntu/Ecommerce
#             docker-compose -f docker-compose.yml down
#             git pull origin main
#             docker-compose -f docker-compose.yml up --build -d
#             sudo echo "Done"

name: Deploy Django App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name: Build Docker Image
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | head -c 7)
        echo "hey"
        # docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/xtremestoreapp:latest .
        # docker push ${{ secrets.DOCKER_HUB_USERNAME }}/xtremestoreapp:latest
        docker build -t nahlooobi/xtremestoreapp:${{ github.sha }} .
        docker tag nahlooobi/xtremestoreapp:${{ github.sha }} nahlooobi/xtremestoreapp:latest


    - name: Push Docker Image
      run: docker push nahlooobi/xtremestoreapp:latest

    - name: Logout from Docker Hub
      run: docker logout

  deploy:
    runs-on: ubuntu-latest

    needs: build

    env:
      EC2_INSTANCE_IP: ${{ secrets.IP_ADDRESS }}
      EC2_INSTANCE_SSH_KEY: ${{ secrets.PRIVATE_KEY }}

    steps:
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.2
      with:
        ssh-private-key: ${{ secrets.EC2_INSTANCE_SSH_KEY }}

    - name: SSH into EC2 and Deploy
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | head -c 7)
        ssh ubuntu@${{ env.EC2_INSTANCE_IP }} "cd /home/ubuntu/Ecommerce && docker-compose pull"
        ssh ubuntu@${{ env.EC2_INSTANCE_IP }} "cd /home/ubuntu/Ecommerce && docker-compose up -d --build --force-recreate"


            
            
